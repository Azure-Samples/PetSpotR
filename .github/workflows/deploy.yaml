name: Build and deploy

on:
  push:
    branches:
      - main
    paths:
      - 'iac/**'
      - 'src/**'
      - '.github/workflows/**'
  workflow_dispatch:
  
env:
  REGISTRY_ADDRESS: petspotr.azurecr.io

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Infrastructure
        run: |
          az deployment group create \
            --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --template-file iac/infra.bicep
  helm:
    name: Install Helm Charts
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Get AKS Credentials
        run: |
          az aks get-credentials \
            --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name petspotr
      - name: Deploy Keda Chart
        run: |
          helm repo add kedacore https://kedacore.github.io/charts
          helm repo update
          helm upgrade keda kedacore/keda --install --version=2.9.4 --namespace keda --create-namespace --wait
      - name: Deploy Dapr Chart
        run: |
          helm repo add dapr https://dapr.github.io/helm-charts/
          helm repo update
          helm upgrade dapr dapr/dapr --install --version=1.9 --namespace dapr-system --create-namespace --wait
  keda:
    name: Install KEDA scalers
    runs-on: ubuntu-latest
    needs: helm
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Get AKS Credentials
        run: |
          az aks get-credentials \
            --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name petspotr
      - name: Deploy KEDA scalers
        run: |
          kubectl apply -f iac/keda/scaler-servicebus.yaml
  dapr:
    name: Install Dapr components
    runs-on: ubuntu-latest
    needs: helm
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Get AKS Credentials
        run: |
          az aks get-credentials \
            --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name petspotr
      - name: Deploy Dapr components
        run: |
          kubectl apply -f iac/dapr/images.yaml
          kubectl apply -f iac/dapr/pubsub.yaml
          kubectl apply -f iac/dapr/pets.yaml
  containers:
    name: Build and publish Docker containers
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Login to ACR
        run: |
          az acr login --name petspotr
      - name: Build and Push Backend
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.REGISTRY_ADDRESS }}/backend:latest
          file: src/backend/Dockerfile
          context: src/backend
      - name: Build and Push Frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.REGISTRY_ADDRESS }}/frontend:latest
          file: src/frontend/Dockerfile
          context: src/frontend
  config:
    name: Deploy configuration and secrets
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy secrets
        run: |
          az deployment group create \
            --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --template-file iac/config.bicep \
            --parameters storageAccountName=petspotr cosmosAccountName=petspotr clusterName=petspotr serviceBusAuthorizationRuleName=petspotr/Dapr
  app:
    name: Deploy PetSpotR application
    runs-on: ubuntu-latest
    needs:
      - containers
      - config
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Infrastructure
        run: |
          az deployment group create \
            --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --template-file iac/app.bicep \
            --parameters registryName=petspotr clusterName=petspotr serviceBusAuthRuleName=petspotr/Dapr
